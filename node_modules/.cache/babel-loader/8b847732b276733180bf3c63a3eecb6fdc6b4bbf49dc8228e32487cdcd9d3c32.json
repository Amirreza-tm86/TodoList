{"ast":null,"code":"import { useStore } from \"vuex\";\nimport workoutFormVue from \"./workoutForm.vue\";\nexport default {\n  name: \"navVue\",\n  components: {\n    workoutFormVue\n  },\n  data() {\n    const store = useStore();\n    if (localStorage.getItem(\"todo\")) {\n      store.dispatch(\"todo\");\n    }\n    return {\n      store\n    };\n  },\n  methods: {\n    showinput: function () {\n      return this.store.state.showinp = !this.store.state.showinp;\n    },\n    middle: function (x) {\n      const list = document.getElementById(\"todo\");\n      this.store.state.todos[x] = {\n        todo: this.store.state.todos[x].todo,\n        isComplete: this.store.state.todos[x].isComplete = !this.store.state.todos[x].isComplete\n      };\n      const parsed = JSON.stringify(this.store.state.todos);\n      localStorage.setItem(\"todo\", parsed);\n      for (var i = 0; i < list.length; ++i) {\n        list[i].classList.toggle(\"checked\");\n      }\n    },\n    updatetodo: function (x) {\n      document.getElementById(\"todo\").value = this.store.state.todos[x].todo;\n      console.log(document.getElementById(\"todo\").value);\n      if (this.store.state.newtodo) {\n        this.store.state.todos[x] = {\n          todo: this.store.state.newtodo,\n          isComplete: false\n        };\n        const parsed = JSON.stringify(this.store.state.todos);\n        localStorage.setItem(\"todo\", parsed);\n        this.store.state.newtodo = \"\";\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA4BA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAOC,cAAa,MAAO,mBAAmB;AAE9C,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAI,GAAG;IACL,MAAMC,KAAI,GAAIL,QAAQ,EAAE;IACxB,IAAIM,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,CAACG,QAAQ,CAAC,MAAM,CAAC;IACxB;IACA,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EACDI,OAAO,EAAE;IACPC,SAAS,EAAE,YAAY;MACrB,OAAQ,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,CAAC,IAAI,CAACP,KAAK,CAACM,KAAK,CAACC,OAAO;IAC9D,CAAC;IACDC,MAAM,EAAE,UAAUC,CAAC,EAAE;MACnB,MAAMC,IAAG,GAAIC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;MAC5C,IAAI,CAACZ,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,IAAI;QAC1BK,IAAI,EAAE,IAAI,CAACd,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,CAAC,CAACK,IAAI;QACpCC,UAAU,EAAG,IAAI,CAACf,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,CAAC,CAACM,UAAS,GAC9C,CAAC,IAAI,CAACf,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,CAAC,CAACM;MAC/B,CAAC;MACD,MAAMC,MAAK,GAAIC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,KAAK,CAACM,KAAK,CAACO,KAAK,CAAC;MACrDZ,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEH,MAAM,CAAC;MACpC,KAAK,IAAII,IAAI,CAAC,EAAEA,IAAIV,IAAI,CAACW,MAAM,EAAE,EAAED,CAAC,EAAE;QACpCV,IAAI,CAACU,CAAC,CAAC,CAACE,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;MACrC;IACF,CAAC;IACDC,UAAU,EAAE,UAAUf,CAAC,EAAE;MACvBE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACa,KAAI,GAAI,IAAI,CAACzB,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,CAAC,CAACK,IAAI;MACtEY,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACa,KAAK,CAAC;MAClD,IAAI,IAAI,CAACzB,KAAK,CAACM,KAAK,CAACsB,OAAO,EAAE;QAC5B,IAAI,CAAC5B,KAAK,CAACM,KAAK,CAACO,KAAK,CAACJ,CAAC,IAAI;UAC1BK,IAAI,EAAE,IAAI,CAACd,KAAK,CAACM,KAAK,CAACsB,OAAO;UAC9Bb,UAAU,EAAE;QACd,CAAC;QACD,MAAMC,MAAK,GAAIC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,KAAK,CAACM,KAAK,CAACO,KAAK,CAAC;QACrDZ,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEH,MAAM,CAAC;QACpC,IAAI,CAAChB,KAAK,CAACM,KAAK,CAACsB,OAAM,GAAI,EAAE;MAC/B;IACF;EACF;AACF,CAAC","names":["useStore","workoutFormVue","name","components","data","store","localStorage","getItem","dispatch","methods","showinput","state","showinp","middle","x","list","document","getElementById","todos","todo","isComplete","parsed","JSON","stringify","setItem","i","length","classList","toggle","updatetodo","value","console","log","newtodo"],"sourceRoot":"","sources":["/home/amirrezatm/Desktop/Amirreza-tm86.github.io-master/front-end/src/components/Home.vue"],"sourcesContent":["<template>\n  <div class=\"between-flex d-todolist\" v-for=\"(todo, n) in store.state.todos\">\n    <div class=\"flex\">\n      <label>\n        <input\n          :checked=\"store.state.todos[n].isComplete\"\n          @click=\"middle(n)\"\n          class=\"check\"\n          id=\"checkbox\"\n          type=\"checkbox\"\n        />\n        <span class=\"spanTodo\" id=\"todo\">{{ todo.todo }}</span>\n        <span class=\"checkbox\" id=\"todo\"></span>\n\n      </label>\n    </div>\n    <div>\n      <font-awesome-icon\n        @click=\"store.dispatch('removetodo', n)\"\n        :icon=\"['fas', 'circle-xmark']\"\n        style=\"height: 18px; cursor: pointer\"\n      />\n      <!-- <button class=\"btn-upd\" @click=\"updatetodo(n)\">Update</button> -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"vuex\";\nimport workoutFormVue from \"./workoutForm.vue\";\n\nexport default {\n  name: \"navVue\",\n  components: {\n    workoutFormVue,\n  },\n  data() {\n    const store = useStore();\n    if (localStorage.getItem(\"todo\")) {\n      store.dispatch(\"todo\");\n    }\n    return {\n      store,\n    };\n  },\n  methods: {\n    showinput: function () {\n      return (this.store.state.showinp = !this.store.state.showinp);\n    },\n    middle: function (x) {\n      const list = document.getElementById(\"todo\");\n      this.store.state.todos[x] = {\n        todo: this.store.state.todos[x].todo,\n        isComplete: (this.store.state.todos[x].isComplete =\n          !this.store.state.todos[x].isComplete),\n      };\n      const parsed = JSON.stringify(this.store.state.todos);\n      localStorage.setItem(\"todo\", parsed);\n      for (var i = 0; i < list.length; ++i) {\n        list[i].classList.toggle(\"checked\");\n      }\n    },\n    updatetodo: function (x) {\n      document.getElementById(\"todo\").value = this.store.state.todos[x].todo;\n      console.log(document.getElementById(\"todo\").value);\n      if (this.store.state.newtodo) {\n        this.store.state.todos[x] = {\n          todo: this.store.state.newtodo,\n          isComplete: false,\n        };\n        const parsed = JSON.stringify(this.store.state.todos);\n        localStorage.setItem(\"todo\", parsed);\n        this.store.state.newtodo = \"\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"../Style/style.css\");\n\n.flex {\n  display: flex;\n}\n\nspan {\n  font-size: 11px;\n  color: black;\n}\n\ninput[type=\"checkbox\"]:checked + p {\n  text-decoration: line-through;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}