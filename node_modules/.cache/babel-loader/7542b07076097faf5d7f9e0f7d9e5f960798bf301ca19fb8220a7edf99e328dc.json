{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dc7cce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-TodoList\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"py-3\"\n}, \"Awesome Todo List\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"todoInp shadow-inner\",\n  id: \"todoInp\",\n  type: \"text\",\n  placeholder: \"What do you need to do today?\",\n  style: {\n    \"outline\": \"none\"\n  }\n}), /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"todo-btn mx-2\"\n}, \"Add\")], -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"between-flex\\\" v-for=\\\"(todo, n) in store.state.todos\\\">\\n        <div class=\\\"flex\\\">\\n            <input :checked=\\\"store.state.todos[n].isComplete\\\" @click=\\\"middle(n)\\\" id=\\\"myCheck\\\" type=\\\"checkbox\\\">\\n            <p id=\\\"todo\\\">{{ todo.todo }}</p>\\n        </div>\\n        <div>\\n            <button class=\\\"btn-del\\\" @click=\\\"store.dispatch('removetodo', n)\\\">Delete</button>\\n            <button class=\\\"btn-upd\\\" @click=\\\"updatetodo(n)\\\">Update</button>\\n        </div>\\n    </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.store.state.todos, (todo, n) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n  }), 256 /* UNKEYED_FRAGMENT */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAYSA,KAAK,EAAC;AAAY;gEACnBC,oBAIM,2BAHFA,oBAAqC;EAAlCD,KAAK,EAAC;AAAM,GAAC,mBAAiB,gBACjCC,oBAAgI;EAAzHD,KAAK,EAAC,sBAAsB;EAACE,EAAE,EAAC,SAAS;EAACC,IAAI,EAAC,MAAM;EAACC,WAAW,EAAC,+BAA+B;EAACC,KAAsB,EAAtB;IAAA;EAAA;iBACzGJ,oBAA0C;EAAlCD,KAAK,EAAC;AAAe,GAAC,KAAG;oBAHrCM,UAIM;;6DAhBVC,ihBASU,qBAEVC,oBAMMC,6BANsCC,WAAK,CAACC,KAAK,CAACC,KAAK,GAA7BC,IAAI,EAAEC,CAAC;yBAAvCN,oBAMM,OANNO,UAMM","names":["class","_createElementVNode","id","type","placeholder","style","_hoisted_2","_createCommentVNode","_createElementBlock","_Fragment","$data","state","todos","todo","n","_hoisted_1"],"sourceRoot":"","sources":["/home/amirrezatm/Desktop/Amirreza-tm86.github.io-master/front-end/src/components/Home.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"between-flex\" v-for=\"(todo, n) in store.state.todos\">\n        <div class=\"flex\">\n            <input :checked=\"store.state.todos[n].isComplete\" @click=\"middle(n)\" id=\"myCheck\" type=\"checkbox\">\n            <p id=\"todo\">{{ todo.todo }}</p>\n        </div>\n        <div>\n            <button class=\"btn-del\" @click=\"store.dispatch('removetodo', n)\">Delete</button>\n            <button class=\"btn-upd\" @click=\"updatetodo(n)\">Update</button>\n        </div>\n    </div> -->\n\n    <div class=\"d-TodoList\" v-for=\"(todo, n) in store.state.todos\">\n        <div>\n            <p class=\"py-3\">Awesome Todo List</p>\n            <input class=\"todoInp shadow-inner\" id=\"todoInp\" type=\"text\" placeholder=\"What do you need to do today?\" style=\"outline: none;\">\n            <button class=\"todo-btn mx-2\">Add</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { useStore } from 'vuex'\nimport workoutFormVue from './workoutForm.vue'\n\nexport default {\n    name: 'navVue',\n    components: {\n        workoutFormVue\n    },\n    data() {\n        const store = useStore()\n        if (localStorage.getItem('todo')) {\n            store.dispatch('todo')\n        }\n        return {\n            store,\n        }\n    },\n    methods: {\n        showinput: function () {\n            return this.store.state.showinp = !this.store.state.showinp\n        },\n        middle: function (x) {\n            const list = document.getElementById(\"todo\");\n            this.store.state.todos[x] = ({ todo: this.store.state.todos[x].todo, isComplete: this.store.state.todos[x].isComplete = !this.store.state.todos[x].isComplete })\n            const parsed = JSON.stringify(this.store.state.todos)\n            localStorage.setItem('todo', parsed)\n            for (var i = 0; i < list.length; ++i) {\n                list[i].classList.toggle('checked');\n            }\n        },\n        updatetodo: function (x) {\n            document.getElementById(\"todo\").value = this.store.state.todos[x].todo\n            console.log(document.getElementById(\"todo\").value);\n            if (this.store.state.newtodo) {\n                this.store.state.todos[x] = ({ todo: this.store.state.newtodo, isComplete: false })\n                const parsed = JSON.stringify(this.store.state.todos)\n                localStorage.setItem('todo', parsed)\n                this.store.state.newtodo = ''\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n@import url('../Style/style.css');\n\n.flex {\n    display: flex;\n}\n\nspan {\n    font-size: 11px;\n    color: black;\n}\n\ninput[type=checkbox]:checked+p {\n    text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}