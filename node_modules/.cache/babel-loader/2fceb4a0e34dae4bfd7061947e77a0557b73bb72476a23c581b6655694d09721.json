{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dc7cce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"between-flex d-todolist\"\n};\nconst _hoisted_2 = {\n  class: \"flex\"\n};\nconst _hoisted_3 = [\"checked\", \"onClick\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkbox\",\n  id: \"todo\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.store.state.todos, (todo, n) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", null, [_createElementVNode(\"input\", {\n      checked: $data.store.state.todos[n].isComplete,\n      onClick: $event => $options.middle(n),\n      class: \"\",\n      id: \"checkbox\",\n      type: \"checkbox\"\n    }, null, 8 /* PROPS */, _hoisted_3), _hoisted_4]), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"ml-5\", {\n        borderP: $data.store.state.isComplete\n      }]),\n      id: \"todo\"\n    }, _toDisplayString(todo.todo), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", null, [_createVNode(_component_font_awesome_icon, {\n      onClick: $event => $data.store.dispatch('removetodo', n),\n      icon: ['fas', 'circle-xmark'],\n      style: {\n        \"height\": \"18px\",\n        \"cursor\": \"pointer\"\n      }\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" <button class=\\\"btn-upd\\\" @click=\\\"updatetodo(n)\\\">Update</button> \")])]);\n  }), 256 /* UNKEYED_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAM;;gEASbC,oBAAmC;EAA7BD,KAAK,EAAC,UAAU;EAACE,EAAE,EAAC;;;;;2BAVhCC,oBA2BMC,6BA3BmDC,WAAK,CAACC,KAAK,CAACC,KAAK,GAA7BC,IAAI,EAAEC,CAAC;yBAApDN,oBA2BM,OA3BNO,UA2BM,GA1BJT,oBAiBM,OAjBNU,UAiBM,GAhBJV,oBASQ,gBARNA,oBAME;MALCW,OAAO,EAAEP,WAAK,CAACC,KAAK,CAACC,KAAK,CAACE,CAAC,EAAEI,UAAU;MACxCC,OAAK,YAAEC,eAAM,CAACN,CAAC;MAChBT,KAAK,EAAC,EAAE;MACRE,EAAE,EAAC,UAAU;MACbc,IAAI,EAAC;yCAEPC,UAAmC,IAErChB,oBAKC;MAJCD,KAAK,mBAAC,MAAM;QAAAkB,SACOb,WAAK,CAACC,KAAK,CAACO;MAAU;MACzCX,EAAE,EAAC;wBACCM,IAAI,CAACA,IAAI,2BAGjBP,oBAOM,cANJkB,aAIEC;MAHCN,OAAK,YAAET,WAAK,CAACgB,QAAQ,eAAeZ,CAAC;MACrCa,IAAI,EAAE,uBAAuB;MAC9BC,KAAqC,EAArC;QAAA;QAAA;MAAA;0CAEFC,2FAAuE","names":["class","_createElementVNode","id","_createElementBlock","_Fragment","$data","state","todos","todo","n","_hoisted_1","_hoisted_2","checked","isComplete","onClick","$options","type","_hoisted_4","borderP","_createVNode","_component_font_awesome_icon","dispatch","icon","style","_createCommentVNode"],"sourceRoot":"","sources":["/home/amirrezatm/Desktop/Amirreza-tm86.github.io-master/front-end/src/components/Home.vue"],"sourcesContent":["<template>\n  <div class=\"between-flex d-todolist\" v-for=\"(todo, n) in store.state.todos\">\n    <div class=\"flex\">\n      <label>\n        <input\n          :checked=\"store.state.todos[n].isComplete\"\n          @click=\"middle(n)\"\n          class=\"\"\n          id=\"checkbox\"\n          type=\"checkbox\"\n        />\n        <span class=\"checkbox\" id=\"todo\" />\n      </label>\n      <span\n        class=\"ml-5\"\n        :class=\"{ borderP: store.state.isComplete }\"\n        id=\"todo\"\n        >{{ todo.todo }}</span\n      >\n    </div>\n    <div>\n      <font-awesome-icon\n        @click=\"store.dispatch('removetodo', n)\"\n        :icon=\"['fas', 'circle-xmark']\"\n        style=\"height: 18px; cursor: pointer\"\n      />\n      <!-- <button class=\"btn-upd\" @click=\"updatetodo(n)\">Update</button> -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"vuex\";\nimport workoutFormVue from \"./workoutForm.vue\";\n\nexport default {\n  name: \"navVue\",\n  components: {\n    workoutFormVue,\n  },\n  data() {\n    const store = useStore();\n    if (localStorage.getItem(\"todo\")) {\n      store.dispatch(\"todo\");\n    }\n    return {\n      store,\n    };\n  },\n  methods: {\n    showinput: function () {\n      return (this.store.state.showinp = !this.store.state.showinp);\n    },\n    middle: function (x) {\n      const list = document.getElementById(\"todo\");\n      this.store.state.isComplete = !this.store.state.isComplete;\n      this.store.state.todos[x] = {\n        todo: this.store.state.todos[x].todo,\n        isComplete: (this.store.state.todos[x].isComplete =\n          !this.store.state.todos[x].isComplete),\n      };\n      const parsed = JSON.stringify(this.store.state.todos);\n      localStorage.setItem(\"todo\", parsed);\n      for (var i = 0; i < list.length; ++i) {\n        list[i].classList.toggle(\"checked\");\n      }\n    },\n    updatetodo: function (x) {\n      document.getElementById(\"todo\").value = this.store.state.todos[x].todo;\n      console.log(document.getElementById(\"todo\").value);\n      if (this.store.state.newtodo) {\n        this.store.state.todos[x] = {\n          todo: this.store.state.newtodo,\n          isComplete: false,\n        };\n        const parsed = JSON.stringify(this.store.state.todos);\n        localStorage.setItem(\"todo\", parsed);\n        this.store.state.newtodo = \"\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"../Style/style.css\");\n\n.flex {\n  display: flex;\n}\n\nspan {\n  font-size: 11px;\n  color: black;\n}\n\ninput[type=\"checkbox\"]:checked + p {\n  text-decoration: line-through;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}